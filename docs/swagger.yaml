basePath: /
definitions:
  models.Category:
    properties:
      Count:
        type: integer
      Img:
        type: string
      Name:
        type: string
      Slug:
        type: string
      id:
        type: integer
    type: object
  models.Recipe:
    properties:
      authorName:
        type: string
      calories:
        type: number
      carbohydrates:
        type: number
      category:
        $ref: '#/definitions/models.Category'
      cholesterol:
        type: number
      datePublished:
        type: string
      description:
        type: string
      externalId:
        type: integer
      fat:
        type: number
      fiber:
        type: number
      id:
        type: integer
      images:
        example: '{"key":"value"}'
        type: string
      ingredientQty:
        example: '{"key":"value"}'
        type: string
      ingredients:
        example: '{"key":"value"}'
        type: string
      instructions:
        example: '{"key":"value"}'
        type: string
      name:
        type: string
      portions:
        type: string
      protein:
        type: number
      rating:
        type: number
      slug:
        type: string
      sodium:
        type: number
      sugar:
        type: number
      tags:
        example: '{"key":"value"}'
        type: string
      totalTime:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: haristw16@gmail.com
    name: Hari Setiawan
  description: This is API Documentation for Wenakk API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Wenakk API
  version: "1.0"
paths:
  /categories:
    get:
      consumes:
      - application/json
      description: Get all categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Category'
            type: array
      summary: Get all categories
      tags:
      - categories
  /categories/{slug}:
    get:
      consumes:
      - application/json
      description: Get category by slug
      parameters:
      - description: Category Slug
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
      summary: Get category by slug
      tags:
      - categories
  /recipes:
    get:
      consumes:
      - application/json
      description: Get all recipes
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Recipe'
            type: array
      summary: Get all recipes
      tags:
      - recipes
  /recipes/{recipeId}:
    get:
      consumes:
      - application/json
      description: Get recipe by id
      parameters:
      - description: Recipe ID
        in: path
        name: recipeId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Recipe'
      summary: Get recipe by id
      tags:
      - recipes
swagger: "2.0"
